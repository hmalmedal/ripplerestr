% Generated by roxygen2 (4.0.1): do not edit by hand
\name{get_payment_paths}
\alias{get_payment_paths}
\title{Preparing a Payment}
\usage{
get_payment_paths(address, destination_account, destination_amount, value,
  currency, issuer = "", source_currencies)
}
\arguments{
\item{address}{The Ripple address for the source account.}

\item{destination_account}{The Ripple address for the destination account.}

\item{destination_amount}{An object of class \code{"\link{Amount}"}. The
amount to be sent to the destination account.}

\item{value}{The quantity of the currency. Ignored if
\code{destination_amount} is provided.}

\item{currency}{The currency expressed as a three-character code. Ignored if
\code{destination_amount} is provided.}

\item{issuer}{The Ripple account address of the currency's issuer or gateway,
or an empty string if the currency is XRP. Ignored if
\code{destination_amount} is provided.}

\item{source_currencies}{A string or an object of class
  \code{"\link{Amount}"}. This is used to filter the returned list of
  possible payments. Each source currency can be specified either as a
  currency code, or as a currency code and issuer. If the issuer is not
  specified for a currency other than XRP, then the results will be limited
  to the specified currency, but any issuer for that currency will be
  included in the results. The string should be a comma-separated list of
  source currencies. Each source currency can be specified either as a
  currency code (eg, \code{USD}), or as a currency code and issuer (eg,
  \code{USD+r...}).}
}
\value{
An object of class \code{"\link{Payment}"}
}
\description{
To prepare a payment, you first make a call to this endpoint. This will
generate a list of possible payments between the two parties for the desired
amount, taking into account the established trustlines between the two
parties for the currency being transferred. You can then choose one of the
returned payments, modify it if necessary (for example, to set slippage
values or tags), and then submit the payment for processing.
}

